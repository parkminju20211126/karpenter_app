apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: test-nodepool
  namespace: karpenter
spec:
  template:
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]  # 노드의 아키텍처
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]  # 운영 체제
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]  # 비용 최적화를 위해 스팟 인스턴스 사용 (옵션)
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["c", "m", "r"]  # 컴퓨팅, 메모리, 스토리지 최적화 인스턴스
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: test-ec2-nodeclass  # EC2NodeClass 참조
  limits:
    cpu: 100  # 노드 풀에서 사용할 수 있는 총 CPU 용량 제한
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized  # 활용도가 낮을 때 노드 통합
    consolidateAfter: 1m  # 활용도가 낮을 때 1분 후 노드 통합
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: test-ec2-nodeclass
spec:
  amiFamily: AL2023  # Amazon Linux 2 AMI 사용
  role: "KarpenterNodeRole-eks-cluster"  # 클러스터 이름으로 대체
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "eks-cluster"
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "eks-cluster"  # 클러스터 보안 그룹 태그
  amiSelectorTerms:
    - id: "ami-078e941ddd932d45c"  # 선택할 AMI의 ID